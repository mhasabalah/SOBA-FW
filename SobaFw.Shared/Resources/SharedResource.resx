<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="IdNumber" xml:space="preserve">
    <value>ID Number</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="Nationality" xml:space="preserve">
    <value>Nationality</value>
  </data>
  <data name="AddErrorMessage" xml:space="preserve">
    <value>Error The {0} hasn't been added.</value>
  </data>
  <data name="Answer" xml:space="preserve">
    <value>Answer</value>
  </data>
  <data name="MinLengthErrorMessage" xml:space="preserve">
    <value>This field should be greater than or equal {0}</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="EditErrorMessage" xml:space="preserve">
    <value>Error {0} hasn't been deleted</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete {0}</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="FillContactData" xml:space="preserve">
    <value>Please Enter OneContract at Least</value>
  </data>
  <data name="PersonCategories" xml:space="preserve">
    <value>Person Categories</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Choose" xml:space="preserve">
    <value>Choose</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="PrintFormFeature" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="EnableDisableMessage" xml:space="preserve">
    <value>Do you want to {0} {1}?</value>
  </data>
  <data name="DeleteOnly" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="JobDescriptions" xml:space="preserve">
    <value>Job Description</value>
  </data>
  <data name="RangeStringErrorMessage" xml:space="preserve">
    <value>Characters must be between {0} and {1}.</value>
  </data>
  <data name="PleaseChooseAnotherDefaultCurreny" xml:space="preserve">
    <value>Please Choose Another Default Curreny</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="Parent" xml:space="preserve">
    <value>Parent</value>
  </data>
  <data name="Policy" xml:space="preserve">
    <value>Policy</value>
  </data>
  <data name="ImportFeature" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="TelephoneCode" xml:space="preserve">
    <value>Telephone Code</value>
  </data>
  <data name="PostCode" xml:space="preserve">
    <value>Postal Code</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="EnableDisableErrorMessage" xml:space="preserve">
    <value>Error the item hasn't been {0}</value>
  </data>
  <data name="MobileNumber" xml:space="preserve">
    <value>Mobile Number</value>
  </data>
  <data name="EnableDisableSuccessMessage" xml:space="preserve">
    <value>The item has been {0} successfully</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="DeleteSuccessMessage" xml:space="preserve">
    <value>The {0} has been deleted successfully</value>
  </data>
  <data name="ConfirmEmail" xml:space="preserve">
    <value>Confirm Email</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>{0} Details</value>
  </data>
  <data name="NumberOfEmployeeValidation" xml:space="preserve">
    <value>Required number of employee must be biger than 0</value>
  </data>
  <data name="EditFeature" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Disable" xml:space="preserve">
    <value>Disable</value>
  </data>
  <data name="Picture" xml:space="preserve">
    <value>Picture</value>
  </data>
  <data name="DuplicationErrorMessage" xml:space="preserve">
    <value>Sorry, {0} already exists.</value>
  </data>
  <data name="ISRequired" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="en" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="ar" xml:space="preserve">
    <value>ar</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="Operations" xml:space="preserve">
    <value>Operations</value>
  </data>
  <data name="ErrorField" xml:space="preserve">
    <value>This field is wrong</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add {0}</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Job" xml:space="preserve">
    <value>Job</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Suggestions" xml:space="preserve">
    <value>Suggestions</value>
  </data>
  <data name="Child" xml:space="preserve">
    <value>Child</value>
  </data>
  <data name="Route" xml:space="preserve">
    <value>Route</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="NoSurveyMassege" xml:space="preserve">
    <value>No Surveys Exist for {0}</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="ConfirmDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AddOnly" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="DefaultCurrencyMessage" xml:space="preserve">
    <value>Do you want to make this currency is default?</value>
  </data>
  <data name="DetailsFeature" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="ContractDateConflict" xml:space="preserve">
    <value>Date of Starting Contract fill in anthor Contract</value>
  </data>
  <data name="GeoStructure" xml:space="preserve">
    <value>GeoLocation</value>
  </data>
  <data name="CurrentLanguage" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="SuccessAdding" xml:space="preserve">
    <value>{0} Is Added Successfully.</value>
  </data>
  <data name="DetailsOnly" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="TransactionType" xml:space="preserve">
    <value>Transaction Type</value>
  </data>
  <data name="EditSuccessMessage" xml:space="preserve">
    <value>The {0} has been updated successfully </value>
  </data>
  <data name="Subsidiary" xml:space="preserve">
    <value>Subsidiary</value>
  </data>
  <data name="UnSelectAll" xml:space="preserve">
    <value>UnSelect All</value>
  </data>
  <data name="RequiredErrorMessage" xml:space="preserve">
    <value>This field is required.</value>
  </data>
  <data name="IsActive" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="EditOnly" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ExportFeature" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="ActivityDateMustLargeThanEstablishmentDate" xml:space="preserve">
    <value>Activity Date Must Large Than Establishment Date</value>
  </data>
  <data name="AddSuccessMessage" xml:space="preserve">
    <value>The {0} has been added succefully</value>
  </data>
  <data name="AddFeature" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="CreationDate" xml:space="preserve">
    <value>CreationDate</value>
  </data>
  <data name="BulkItem" xml:space="preserve">
    <value>Bulk Item</value>
  </data>
  <data name="DeleteMessage" xml:space="preserve">
    <value>Do you want to Delete {0}?</value>
  </data>
  <data name="MainCategory" xml:space="preserve">
    <value>Main Category</value>
  </data>
  <data name="UniqueErrorMessage" xml:space="preserve">
    <value>This field is repeated</value>
  </data>
  <data name="FillDataSucces" xml:space="preserve">
    <value>Succesfully Adding Employee Contract</value>
  </data>
  <data name="NewCategory" xml:space="preserve">
    <value>New Category</value>
  </data>
  <data name="TransactionNumber" xml:space="preserve">
    <value>Transaction Number</value>
  </data>
  <data name="BrowseFeature" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="FillContractDataError" xml:space="preserve">
    <value>Error in adding employee contract</value>
  </data>
  <data name="ConfirmAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="ComplainType" xml:space="preserve">
    <value>ComplainType</value>
  </data>
  <data name="GreaterThanErrorMessage" xml:space="preserve">
    <value>This field should be greater than {0}</value>
  </data>
  <data name="NameSecondLanguage" xml:space="preserve">
    <value>Name Second Language</value>
  </data>
  <data name="DeleteFeature" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="MaxLengthErrorMessage" xml:space="preserve">
    <value>This field should be less than or equal {0}</value>
  </data>
  <data name="Complaint" xml:space="preserve">
    <value>Complaint</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="DeleteErrorMessage" xml:space="preserve">
    <value>Error The {0} hasn't been deleted</value>
  </data>
  <data name="ReportFeature" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="PersonCategory" xml:space="preserve">
    <value>Person Category</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit {0}</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="Bulk" xml:space="preserve">
    <value>Bulk</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Logo" xml:space="preserve">
    <value>Logo</value>
  </data>
  <data name="Jobs" xml:space="preserve">
    <value>Jobs</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
</root>